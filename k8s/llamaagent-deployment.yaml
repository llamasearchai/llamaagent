apiVersion: v1
kind: Namespace
metadata:
  name: llamaagent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: llamaagent-config
  namespace: llamaagent
data:
  APP_NAME: "LlamaAgent-Advanced"
  APP_ENV: "production"
  LOG_LEVEL: "INFO"
  WORKERS: "4"
  MAX_CONNECTIONS: "1000"
  ENABLE_ADVANCED_REASONING: "true"
  ENABLE_MULTIMODAL: "true"
  ENABLE_PERFORMANCE_OPTIMIZATION: "true"
  CACHE_BACKEND: "redis"
  CACHE_STRATEGY: "hybrid"
  ERROR_RECOVERY_ENABLED: "true"
  CIRCUIT_BREAKER_ENABLED: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: llamaagent-secrets
  namespace: llamaagent
type: Opaque
stringData:
  database-url: "postgresql://llamaagent:secure_password@postgres-service:5432/llamaagent"
  redis-url: "redis://redis-service:6379/0"
  openai-api-key: "${OPENAI_API_KEY}"
  anthropic-api-key: "${ANTHROPIC_API_KEY}"
  together-api-key: "${TOGETHER_API_KEY}"
  cohere-api-key: "${COHERE_API_KEY}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamaagent-api
  namespace: llamaagent
  labels:
    app: llamaagent-api
    version: advanced
spec:
  replicas: 3
  selector:
    matchLabels:
      app: llamaagent-api
  template:
    metadata:
      labels:
        app: llamaagent-api
        version: advanced
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: llamaagent
      containers:
      - name: llamaagent
        image: llamaagent:advanced
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: llamaagent-config
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-secrets
              key: anthropic-api-key
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: logs
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: llamaagent-service
  namespace: llamaagent
  labels:
    app: llamaagent-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: llamaagent-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: llamaagent-hpa
  namespace: llamaagent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: llamaagent-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: llamaagent-pdb
  namespace: llamaagent
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: llamaagent-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: llamaagent-ingress
  namespace: llamaagent
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - api.llamaagent.ai
    secretName: llamaagent-tls
  rules:
  - host: api.llamaagent.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: llamaagent-service
            port:
              number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: llamaagent
  namespace: llamaagent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: llamaagent-role
  namespace: llamaagent
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: llamaagent-rolebinding
  namespace: llamaagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: llamaagent-role
subjects:
- kind: ServiceAccount
  name: llamaagent
  namespace: llamaagent