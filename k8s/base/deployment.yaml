apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamaagent-api
  namespace: llamaagent
  labels:
    app: llamaagent-api
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: llamaagent-api
  template:
    metadata:
      labels:
        app: llamaagent-api
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: llamaagent-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: llamaagent/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-db-secret
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-redis-secret
              key: redis-url
        - name: QDRANT_URL
          value: "http://qdrant:6333"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-api-keys
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-api-keys
              key: anthropic-api-key
        - name: DEEPSEEK_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-api-keys
              key: deepseek-api-key
        - name: MISTRAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: llamaagent-api-keys
              key: mistral-api-key
        - name: JAEGER_AGENT_HOST
          value: "jaeger-agent.observability.svc.cluster.local"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: config
        configMap:
          name: llamaagent-config
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamaagent-worker
  namespace: llamaagent
  labels:
    app: llamaagent-worker
    component: worker
spec:
  replicas: 5
  selector:
    matchLabels:
      app: llamaagent-worker
  template:
    metadata:
      labels:
        app: llamaagent-worker
        component: worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
    spec:
      serviceAccountName: llamaagent-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: llamaagent/worker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8002
          name: metrics
          protocol: TCP
        env:
        - name: WORKER_TYPE
          value: "evolution"
        - name: WORKER_CONCURRENCY
          value: "10"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-db-secret
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: llamaagent-redis-secret
              key: redis-url
        - name: QDRANT_URL
          value: "http://qdrant:6333"
        - name: MODEL_CACHE_DIR
          value: "/app/model-cache"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "4000m"
        volumeMounts:
        - name: model-cache
          mountPath: /app/model-cache
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamaagent-multimodal-worker
  namespace: llamaagent
  labels:
    app: llamaagent-multimodal-worker
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: llamaagent-multimodal-worker
  template:
    metadata:
      labels:
        app: llamaagent-multimodal-worker
        component: worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
    spec:
      serviceAccountName: llamaagent-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: llamaagent/multimodal-worker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8003
          name: metrics
          protocol: TCP
        env:
        - name: WORKER_TYPE
          value: "multimodal"
        - name: ENABLE_GPU
          value: "true"
        - name: GPU_MEMORY_FRACTION
          value: "0.8"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: model-cache
          mountPath: /app/model-cache
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      nodeSelector:
        accelerator: nvidia-tesla-t4