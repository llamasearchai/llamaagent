version: '3.8'

services:
  # Main LlamaAgent Master Service
  llamaagent-master:
    build:
      context: .
      dockerfile: Dockerfile.master
    container_name: llamaagent-master
    restart: unless-stopped
    ports:
      - "8000:8000"  # API port
      - "9090:9090"  # Metrics port
    environment:
      - PYTHONPATH=/app/src
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - DATABASE_URL=postgresql://llamaagent:llamaagent@postgres:5432/llamaagent
      - REDIS_URL=redis://redis:6379
      - LLAMAAGENT_ENV=production
      - LLAMAAGENT_LOG_LEVEL=INFO
    volumes:
      - ./config:/app/config:ro
      - ./logs:/var/log/llamaagent
      - ./data:/app/data
      - ./cache:/app/cache
    depends_on:
      - postgres
      - redis
    networks:
      - llamaagent-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: llamaagent-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=llamaagent
      - POSTGRES_PASSWORD=llamaagent
      - POSTGRES_DB=llamaagent
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - llamaagent-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U llamaagent"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: llamaagent-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - llamaagent-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: llamaagent-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - llamaagent-master
    networks:
      - llamaagent-network

  # Prometheus Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: llamaagent-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - llamaagent-network

  # Grafana Dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: llamaagent-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - llamaagent-network

networks:
  llamaagent-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: